[
    {
        "signature": "public static Map<CharSequence, CharSequence> invert(final Map<CharSequence, CharSequence> map)",
        "implementation": "public static Map<CharSequence, CharSequence> invert(final Map<CharSequence, CharSequence> map) {\n        return map.entrySet().stream().collect(Collectors.toMap(Entry::getValue, Entry::getKey));\n    }",
        "called_methods": [
            "entrySet",
            "stream",
            "collect",
            "toMap"
        ],
        "repository": "commons-text-master-docbyai",
        "source": "commons-text-master-docbyai\\src\\main\\java\\org\\apache\\commons\\text\\translate\\EntityArrays.java",
        "name": "invert",
        "javadoc": "/**\n * Inverts a given map by swapping its key-value pairs.\n *\n * @param map the input map to be inverted\n * @return a new map with the original values as keys and the original keys as values\n */\n",
        "improved_javadoc": "/**\n * Inverts a given map by swapping its key-value pairs.\n *\n * This method returns a new map where each entry from the original map's\n * entry set is transformed into a new entry with the original value as the key and\n * the original key as the value. If the input map contains duplicate keys, their\n * corresponding values will be overwritten in the resulting inverted map.\n *\n * @param map the input map to be inverted\n * @return a new map with the original values as keys and the original keys as values\n */\n"
    }
]