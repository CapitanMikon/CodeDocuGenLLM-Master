[
    {
        "signature": "public String lookup(final String key)",
        "implementation": "public String lookup(final String key) {\n        if (key == null) {\n            return null;\n        }\n        final String[] keys = key.trim().split(\"\\\\|\");\n        final int keyLen = keys.length;\n        final String subKey = keys[0].trim();\n        final String subValue = keyLen < 2 ? key : keys[1].trim();\n        try {\n            final InetAddress inetAddress = InetAddress.getByName(subValue);\n            switch (subKey) {\n            case InetAddressKeys.KEY_NAME:\n                return inetAddress.getHostName();\n            case InetAddressKeys.KEY_CANONICAL_NAME:\n                return inetAddress.getCanonicalHostName();\n            case InetAddressKeys.KEY_ADDRESS:\n                return inetAddress.getHostAddress();\n            default:\n                return inetAddress.getHostAddress();\n            }\n        } catch (final UnknownHostException e) {\n            return null;\n        }\n    }",
        "called_methods": [
            "trim",
            "split",
            "getByName",
            "getHostName",
            "getCanonicalHostName",
            "getHostAddress"
        ],
        "repository": "commons-text-master-docbyai",
        "source": "commons-text-master-docbyai\\src\\main\\java\\org\\apache\\commons\\text\\lookup\\DnsStringLookup.java",
        "name": "lookup",
        "javadoc": "/**\n     * Looks up the DNS value of the key.\n     *\n     * @param key the key to be looked up, may be null\n     * @return The DNS value.\n     */"
    }
]