[
    {
        "signature": "private boolean isOctalDigit(final char ch)",
        "implementation": "private boolean isOctalDigit(final char ch) {\n        return ch >= '0' && ch <= '7';\n    }",
        "called_methods": "",
        "repository": "commons-text-master-docbyai",
        "source": "commons-text-master-docbyai\\src\\main\\java\\org\\apache\\commons\\text\\translate\\OctalUnescaper.java",
        "name": "isOctalDigit",
        "javadoc": "/**\n     * Tests if the given char is an octal digit. Octal digits are the character representations of the digits 0 to 7.\n     *\n     * @param ch the char to check\n     * @return true if the given char is the character representation of one of the digits from 0 to 7\n     */"
    },
    {
        "signature": "private boolean isZeroToThree(final char ch)",
        "implementation": "private boolean isZeroToThree(final char ch) {\n        return ch >= '0' && ch <= '3';\n    }",
        "called_methods": "",
        "repository": "commons-text-master-docbyai",
        "source": "commons-text-master-docbyai\\src\\main\\java\\org\\apache\\commons\\text\\translate\\OctalUnescaper.java",
        "name": "isZeroToThree",
        "javadoc": "/**\n     * Tests if the given char is the character representation of one of the digit from 0 to 3.\n     *\n     * @param ch the char to check\n     * @return true if the given char is the character representation of one of the digits from 0 to 3\n     */"
    },
    {
        "signature": "public int translate(final CharSequence input, final int index, final Writer writer) throws IOException",
        "implementation": "public int translate(final CharSequence input, final int index, final Writer writer) throws IOException {\n        final int remaining = input.length() - index - 1; // how many characters left, ignoring the first \\\n        final StringBuilder builder = new StringBuilder();\n        if (input.charAt(index) == '\\\\' && remaining > 0 && isOctalDigit(input.charAt(index + 1))) {\n            final int next = index + 1;\n            final int next2 = index + 2;\n            final int next3 = index + 3;\n\n            // we know this is good as we checked it in the if block above\n            builder.append(input.charAt(next));\n\n            if (remaining > 1 && isOctalDigit(input.charAt(next2))) {\n                builder.append(input.charAt(next2));\n                if (remaining > 2 && isZeroToThree(input.charAt(next)) && isOctalDigit(input.charAt(next3))) {\n                    builder.append(input.charAt(next3));\n                }\n            }\n\n            writer.write(Integer.parseInt(builder.toString(), 8));\n            return 1 + builder.length();\n        }\n        return 0;\n    }",
        "called_methods": [
            "length",
            "charAt",
            "isOctalDigit",
            "append",
            "isZeroToThree",
            "write",
            "parseInt",
            "toString"
        ],
        "repository": "commons-text-master-docbyai",
        "source": "commons-text-master-docbyai\\src\\main\\java\\org\\apache\\commons\\text\\translate\\OctalUnescaper.java",
        "name": "translate",
        "javadoc": "/**\n     * {@inheritDoc}\n     */"
    }
]