[
    {
        "signature": "public R apply(final CharSequence right)",
        "implementation": "public R apply(final CharSequence right) {\n        return similarityScore.apply(left, right);\n    }",
        "called_methods": [
            "apply"
        ],
        "repository": "commons-text-master-docbyai",
        "source": "commons-text-master-docbyai\\src\\main\\java\\org\\apache\\commons\\text\\similarity\\SimilarityScoreFrom.java",
        "name": "apply",
        "javadoc": "/**\n     * This compares \"left\" field against the \"right\" parameter\n     * using the \"similarity score\" implementation.\n     *\n     * @param right the second CharSequence\n     * @return The similarity score between two CharSequences\n     */"
    },
    {
        "signature": "public CharSequence getLeft()",
        "implementation": "public CharSequence getLeft() {\n        return left;\n    }",
        "called_methods": "",
        "repository": "commons-text-master-docbyai",
        "source": "commons-text-master-docbyai\\src\\main\\java\\org\\apache\\commons\\text\\similarity\\SimilarityScoreFrom.java",
        "name": "getLeft",
        "javadoc": "/**\n     * Gets the left parameter.\n     *\n     * @return The left parameter\n     */"
    },
    {
        "signature": "public SimilarityScore<R> getSimilarityScore()",
        "implementation": "public SimilarityScore<R> getSimilarityScore() {\n        return similarityScore;\n    }",
        "called_methods": "",
        "repository": "commons-text-master-docbyai",
        "source": "commons-text-master-docbyai\\src\\main\\java\\org\\apache\\commons\\text\\similarity\\SimilarityScoreFrom.java",
        "name": "getSimilarityScore",
        "javadoc": "/**\n     * Gets the edit distance.\n     *\n     * @return The edit distance\n     */"
    }
]