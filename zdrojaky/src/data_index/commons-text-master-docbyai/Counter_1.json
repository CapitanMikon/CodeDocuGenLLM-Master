[
    {
        "signature": "public static Map<CharSequence, Integer> of(final CharSequence[] tokens)",
        "implementation": "public static Map<CharSequence, Integer> of(final CharSequence[] tokens) {\n        final Map<CharSequence, Integer> map = new HashMap<>();\n        Stream.of(tokens).forEach(token -> map.compute(token, (k, v) -> v != null ? v + 1 : 1));\n        return map;\n    }",
        "called_methods": [
            "of",
            "forEach",
            "compute"
        ],
        "repository": "commons-text-master-docbyai",
        "source": "commons-text-master-docbyai\\src\\main\\java\\org\\apache\\commons\\text\\similarity\\Counter.java",
        "name": "of",
        "javadoc": "/**\n     * Counts how many times each element provided occurred in an array and\n     * returns a map with the element as key and the count as value.\n     *\n     * @param tokens array of tokens.\n     * @return a map, where the elements are key, and the count the value.\n     */"
    }
]